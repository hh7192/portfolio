{"version":3,"sources":["miniprojects-budgetapp/js/app.js"],"names":["UI","budgetFeedback","document","querySelector","expenseFeedback","budgetForm","getElementById","budgetInput","budgetAmount","expenseAmount","balance","balanceAmount","expenseForm","expenseInput","amountInput","expenseList","itemList","itemID","budgetValue","value","classList","add","innerHTML","setTimeout","remove","textContent","showBalance","expense","totalExpense","total","parseInt","expenseValue","amountValue","amount","id","title","push","addExpense","div","createElement","appendChild","length","reduce","curr","element","dataset","parent","parentElement","removeChild","filter","item","tempList","eventListeners","ui","addEventListener","event","preventDefault","submitBudgetForm","submitExpenseForm","target","contains","editExpense","deleteExpense"],"mappings":"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","file":"app.7e60eb92.js","sourceRoot":"..","sourcesContent":["// cleaner code without prototypes and using just classes.\n// Step1: accessing to properties and presetting them by UI class\n// Step2: writing eventlisteners function building\n// Step3: writing methods for each property we have accessed\n// Step4: adding methods to eventlistener function. \n// Step5: calling function when DOM loads.\n\n\n\n\n\n\n\n\n// Step1:accessing to properties and presetting them by UI class\nclass UI {\n  constructor() {\n    this.budgetFeedback = document.querySelector(\".budget-feedback\");\n    this.expenseFeedback = document.querySelector(\".expense-feedback\");\n    this.budgetForm = document.getElementById(\"budget-form\");\n    this.budgetInput = document.getElementById(\"budget-input\");\n    this.budgetAmount = document.getElementById(\"budget-amount\");\n    this.expenseAmount = document.getElementById(\"expense-amount\");\n    this.balance = document.getElementById(\"balance\");\n    this.balanceAmount = document.getElementById(\"balance-amount\");\n    this.expenseForm = document.getElementById(\"expense-form\");\n    this.expenseInput = document.getElementById(\"expense-input\");\n    this.amountInput = document.getElementById(\"amount-input\");\n    this.expenseList = document.getElementById(\"expense-list\");\n    this.itemList = [];\n    this.itemID = 0;\n  }\n  // Step3: writing methods for each property we have accessed\n// 1----------------------------------------------------------------------------\n  // submit BudgetForm method\n    // getting value from the budgetInput field (budget in $)\n      // if: setting error handling for empty and negatives in budgetFeedback.\n        // setTimeout: hiding the feedback \n      // else: grabbing entered value and put it in budgetAmount\n        // remove the entered value from budgetInput\n        // calling the showBalance function\n  submitBudgetForm() {\n    const budgetValue = this.budgetInput.value;\n\n    if(budgetValue === '' || budgetValue < 0){\n      this.budgetFeedback.classList.add('showItem');\n      this.budgetFeedback.innerHTML = `<p>مقدار خالی یا منفی<p>`;\n\n      // to prevent refer to global obj in setTimout\n      setTimeout(() => {\n        this.budgetFeedback.classList.remove('showItem');\n      },4000);\n    }\n    else {\n      this.budgetAmount.textContent = budgetValue;\n      this.budgetInput.value = '';\n      this.showBalance();\n    }\n  }\n\n// 2----------------------------------------------------------------------------\n  // showBalance method to add to balanceAmount\n    // expense: storing value from totalExpense func in a variable\n      // total: value passed to budgetAmount in submitBudgetForm() and subtract expense from it\n        // grabbing calculated total and put it in balanceAmount\n          // if, else: set the color of balanceAmount for negative and positive amount\n  showBalance() {\n    const expense = this.totalExpense();\n    const total = parseInt(this.budgetAmount.textContent) - expense;\n    this.balanceAmount.textContent = total;\n    if(total < 0){\n      this.balance.classList.remove('showGreen','showBlack');\n      this.balance.classList.add('showRed');\n    }\n    else if(total > 0){\n      this.balance.classList.remove('showRed','showBlack');\n      this.balance.classList.add('showGreen');\n    }\n    else {\n      this.balance.classList.remove('showRed','showGreen');\n      this.balance.classList.add('showBlack')\n    }\n  }\n\n// 3----------------------------------------------------------------------------\n  // submit ExpenseForm method\n    // getting value from the expenseInput field (expense text)\n    // getting value from the amountInput field (expense in $)\n      // if: setting error handling for empty and negatives in expenseFeedback.\n        // setTimeout: hiding the feedback \n      // else: grabbing entered value form amountInput and put it in amount variable\n        // remove the entered value from expenseInput\n        // remove the entered value from amountInput\n        // expense obj: for storing each itemID, expenseValue and amount\n      // increment itemID by 1\n        // pushing created expense obj to itemList array\n          // calling addExpense function\n            // calling showBalance function\nsubmitExpenseForm() {\n  const expenseValue = this.expenseInput.value;\n  const amountValue = this.amountInput.value;\n\n    if(expenseValue === '' || amountValue == '' || amountValue < 0){\n      this.expenseFeedback.classList.add('showItem');\n      this.expenseFeedback.innerHTML = `<p>مقدار خالی یا منفی<p>`;\n\n      // to prevent refer to global obj in setTimout\n      setTimeout(() => {\n        this.expenseFeedback.classList.remove('showItem');\n      },4000);\n    }\n    else {\n      let amount = parseInt(amountValue);\n      this.expenseInput.value = '';\n      this.amountInput.value = '';\n\n      let expense = {\n        id:this.itemID,\n        title:expenseValue,\n        amount:amount\n      }\n      this.itemID++;\n      this.itemList.push(expense);\n      this.addExpense(expense);\n      this.showBalance();\n    }\n}\n\n// 4----------------------------------------------------------------------------\n  // addExpense method to create a div for each single expence and fill it. \n    // adding the expense class to created div\n      // building HTML code for created div\n        // appending the created single expense to expenseList\n  addExpense(expense) {\n    const div = document.createElement('div');\n    div.classList.add('expense');\n    div.innerHTML = `\n    <div class=\"expense-item d-flex justify-content-between align-items-baseline\">\n\n    <h6 class=\"expense-title mb-0 text-uppercase list-item\"> ${expense.title}</h6>\n    <h5 class=\"expense-amount mb-0 list-item\">${expense.amount}</h5>\n\n    <div class=\"expense-icons list-item\">\n\n     <a href=\"#\" class=\"edit-icon mx-2\" data-id=\"${expense.id}\">\n      <i class=\"fas fa-edit\"></i>\n     </a>\n     <a href=\"#\" class=\"delete-icon\" data-id=\"${expense.id}\">\n      <i class=\"fas fa-trash\"></i>\n     </a>\n    </div>\n   </div>`;\n    this.expenseList.appendChild(div);\n  }\n\n// 5----------------------------------------------------------------------------\n  // totalExpense method to calc expanses from expenseList\n    // set initial total to 0\n      // if: check itemList length to see if there is any expense and calc total\n        // selecting itemList to run reduce() to calc total from amount property of itemList\n          //  if there is no expense we return total (which is 0)\n  totalExpense() {\n    let total = 0;\n    if(this.itemList.length > 0) {\n      total = this.itemList.reduce(function(total,curr){\n        total += curr.amount;\n        // console.log(`total is ${total} and current value is ${curr.amount}`);\n        return total;\n      },0);\n    }\n   this.expenseAmount.textContent = total;\n   return total;\n  }\n\n// 6----------------------------------------------------------------------------\n  // editExpense method for edit icon functionality\n    // \n      // element (icon) has 4 parents to reach the expense-list id. 1 covered in eventlistener, 3 here      \n  editExpense(element) {\n    let id = parseInt(element.dataset.id);\n    let parent = element.parentElement.parentElement.parentElement\n\n      // removing the parent from the expense list (DOM)\n    this.expenseList.removeChild(parent);\n\n      // removing from array (itemList)\n    let expense = this.itemList.filter(function(item){\n      return item.id === id;\n    });\n    let tempList = this.itemList.filter(function(item){\n      return item.id !== id;\n    });\n    this.itemList = tempList;\n    this.showBalance();\n\n      // show selected values in input for editing\n    this.expenseInput.value = expense[0].title;\n    this.amountInput.value = expense[0].amount;\n  }\n\n  // 7----------------------------------------------------------------------------\n    // deleteExpense method for edit icon functionality\n  deleteExpense(element) {\n    let id = parseInt(element.dataset.id);\n    let parent = element.parentElement.parentElement.parentElement\n\n      // removing the parent from the expense list (DOM)\n    this.expenseList.removeChild(parent);\n\n     // removing from array (itemList)\n     let expense = this.itemList.filter(function(item){\n      return item.id === id;\n    });\n    let tempList = this.itemList.filter(function(item){\n      return item.id !== id;\n    });\n    this.itemList = tempList;\n    this.showBalance();\n  }\n}\n\n\n\n\n\n\n// Step2:writing eventlisteners function building.\n  // listening to 3 events in this function (3 inputs).others will be done in the UI CLASS.\nfunction eventListeners() {\n  const budgetForm = document.getElementById('budget-form');\n  const expenseForm = document.getElementById('expense-form');\n  const expenseList = document.getElementById('expense-list');\n\n    // new instance of UI CLASS\n  const ui = new UI();\n\n    // budget form submit\n      // preventDefault: prevent from refreshing the page every time user submite\n        // Step4: adding BudgetForm method\n  budgetForm.addEventListener('submit', function(event){\n    event.preventDefault();\n    ui.submitBudgetForm();\n  });\n\n    // expense form submit\n      // preventDefault: prevent from refreshing the page every time user submite\n        // Step4: adding BudgetForm method\n  expenseForm.addEventListener('submit', function(event){\n    event.preventDefault();\n    ui.submitExpenseForm();\n  });\n\n    // expense list click (attaching to existing expense like delete and edit)\n      // get items when clicking expenseList\n        // if: getting parent element of the link for edit icon\n          // create editExpense method\n        // else if: getting parent element of the link for delete icon\n          // create deleteExpense method\n  expenseList.addEventListener('click', function(event){\n    if(event.target.parentElement.classList.contains('edit-icon')){\n      ui.editExpense(event.target.parentElement);\n    }\n    else if(event.target.parentElement.classList.contains('delete-icon')){\n      ui.deleteExpense(event.target.parentElement);\n    }\n  });\n}\n\n\n\n\n\n\n\n\n// Step5: calling function when DOM loads.\ndocument.addEventListener('DOMContentLoaded', function() {\n  eventListeners();\n});\n\n\n"]}